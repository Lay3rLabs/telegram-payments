version: "3"

tasks:
  contract-upload:
    requires:
      vars: [CONTRACT, FILENAME]
    cmds:
      - cd packages/cli && cargo run upload-contract --kind {{.CONTRACT}} --output-filename={{.FILENAME}}

  contract-instantiate-payments:
    requires:
      vars: [FILENAME, CODE_ID]
    cmds:
      - cd packages/cli && cargo run instantiate-payments --output-filename={{.FILENAME}} --code-id={{.CODE_ID}}

  tap-faucet:
    cmds:
      - cd packages/cli && cargo run faucet-tap

  upload-component:
    requires:
      vars: [COMPONENT, FILENAME]
    vars:
      IPFS_API_URL: "http://127.0.0.1:{{.IPFS_API_PORT}}"
      IPFS_GATEWAY_URL: "http://127.0.0.1:{{.IPFS_GATEWAY_PORT}}"
    cmds:
      - cd packages/cli && cargo run upload-component --kind {{.COMPONENT}} --output-filename={{.FILENAME}} --ipfs-api-url {{.IPFS_API_URL}} --ipfs-gateway-url {{.IPFS_GATEWAY_URL}}

  middleware-service-manager-upload:
    requires:
      vars: [FILENAME]
    cmds:
      - mkdir -p "{{.ARTIFACTS_PATH}}"
      - >
        docker run --rm
        --network host
        -v "{{.WAVS_HOME_DIR}}":/wavs-home:ro
        -v "{{.DEPLOYMENTS_ARTIFACTS_PATH}}":/output
        -e CHAIN_KEY="{{.CHAIN_KEY}}"
        -e WAVS_HOME="/wavs-home"
        -e CLI_MNEMONIC="{{.CLI_MNEMONIC}}"
        {{.WAVS_CW_MIDDLEWARE_DOCKER_IMAGE}}
        service-manager upload --contract-kind mirror
        --output-path "/output/{{.FILENAME}}"

  middleware-stake-registry-upload:
    requires:
      vars: [FILENAME]
    cmds:
      - mkdir -p "{{.ARTIFACTS_PATH}}"
      - >
        docker run --rm
        --network host
        -v "{{.WAVS_HOME_DIR}}":/wavs-home:ro
        -v "{{.DEPLOYMENTS_ARTIFACTS_PATH}}":/output
        -e CHAIN_KEY="{{.CHAIN_KEY}}"
        -e WAVS_HOME="/wavs-home"
        -e CLI_MNEMONIC="{{.CLI_MNEMONIC}}"
        {{.WAVS_CW_MIDDLEWARE_DOCKER_IMAGE}}
        registry upload --contract-kind mirror_stake
        --output-path "/output/{{.FILENAME}}"

  middleware-instantiate:
    requires:
      vars: [MANAGER_CODE_ID, REGISTRY_CODE_ID, FILENAME]
    vars:
      THRESHOLD: 1000
      STRATEGIES: "test_strategy_1=100 test_strategy_2=200"
    cmds:
      - mkdir -p "{{.ARTIFACTS_PATH}}"
      - >
        docker run --rm
        --network host
        -v "{{.WAVS_HOME_DIR}}":/wavs-home:ro
        -v "{{.DEPLOYMENTS_ARTIFACTS_PATH}}":/output
        -e CHAIN_KEY="{{.CHAIN_KEY}}"
        -e WAVS_HOME="/wavs-home"
        -e CLI_MNEMONIC="{{.CLI_MNEMONIC}}"
        {{.WAVS_CW_MIDDLEWARE_DOCKER_IMAGE}}
        registry instantiate-mirror-stake
        --code-id {{.REGISTRY_CODE_ID}}
        --service-manager-code-id {{.MANAGER_CODE_ID}}
        --threshold-weight {{.THRESHOLD}}
        --strategy {{.STRATEGIES}}
        --output-path "/output/{{.FILENAME}}"
